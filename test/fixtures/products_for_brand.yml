---
http_interactions:
- request:
    method: get
    uri: https://world.openbeautyfacts.org/brand/sedapoux/1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Access-Control-Allow-Headers:
      - DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,If-None-Match,Authorization
      Access-Control-Allow-Methods:
      - HEAD, GET, PATCH, POST, PUT, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Content-Length,Content-Range
      Connection:
      - close
      Content-Type:
      - text/html; charset=iso-8859-1
      Date:
      - Mon, 29 Sep 2025 14:07:22 GMT
      Location:
      - "/facets/brands/sedapoux"
      Server:
      - nginx/1.18.0
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
        <html><head>
        <title>301 Moved Permanently</title>
        </head><body>
        <h1>Moved Permanently</h1>
        <p>The document has moved <a href="/facets/brands/sedapoux">here</a>.</p>
        <hr>
        <address>Apache/2.4.61 (Debian) Server at world.openbeautyfacts.org Port 80</address>
        </body></html>
  recorded_at: Mon, 29 Sep 2025 14:07:22 GMT
- request:
    method: get
    uri: https://world.openbeautyfacts.org/facets/brands/sedapoux
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - close
      Content-Type:
      - text/html; charset=UTF-8
      Date:
      - Mon, 29 Sep 2025 14:07:22 GMT
      Expires:
      - Sun, 28 Sep 2025 14:07:22 GMT
      Server:
      - nginx/1.18.0
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Request-Id:
      - lxsixJxEP1wEsg07
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 29 Sep 2025 14:07:22 GMT
recorded_with: VCR 6.3.1
